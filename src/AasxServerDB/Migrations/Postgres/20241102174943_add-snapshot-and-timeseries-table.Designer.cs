// <auto-generated />
using System;
using AasxServerDB.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AasxServerDB.Migrations.Postgres
{
    [DbContext(typeof(PostgreAasContext))]
    [Migration("20241102174943_add-snapshot-and-timeseries-table")]
    partial class addsnapshotandtimeseriestable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AasxServerDB.Entities.AASSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AASXId")
                        .HasColumnType("integer");

                    b.Property<int?>("AASXSetId")
                        .HasColumnType("integer");

                    b.Property<string>("AssetKind")
                        .HasColumnType("text");

                    b.Property<string>("GlobalAssetId")
                        .HasColumnType("text");

                    b.Property<string>("IdShort")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeStampCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeStampTree")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AASXSetId");

                    b.HasIndex("ParentId");

                    b.ToTable("AASSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.AASXSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AASX")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AASXSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.DValueSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Annotation")
                        .HasColumnType("text");

                    b.Property<int>("SMEId")
                        .HasColumnType("integer");

                    b.Property<double?>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("SMEId");

                    b.ToTable("DValueSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.IValueSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Annotation")
                        .HasColumnType("text");

                    b.Property<int>("SMEId")
                        .HasColumnType("integer");

                    b.Property<long?>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SMEId");

                    b.ToTable("IValueSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.OValueSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SMEId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SMEId");

                    b.ToTable("OValueSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SMESet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("IdShort")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("ParentSMEId")
                        .HasColumnType("integer");

                    b.Property<string>("SMEType")
                        .HasColumnType("text");

                    b.Property<int>("SMId")
                        .HasColumnType("integer");

                    b.Property<string>("SemanticId")
                        .HasColumnType("text");

                    b.Property<object>("SubmodelElement")
                        .HasColumnType("jsonb");

                    b.Property<string>("TValue")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeStampCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeStampTree")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ParentSMEId");

                    b.HasIndex("SMId");

                    b.ToTable("SMESets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SMESnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AASId")
                        .HasColumnType("integer");

                    b.Property<Guid>("AASIdShort")
                        .HasColumnType("uuid");

                    b.Property<int>("SMEId")
                        .HasColumnType("integer");

                    b.Property<Guid>("SMEIdshort")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AASId");

                    b.HasIndex("SMEId");

                    b.ToTable("SMESnapshots");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SMSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AASId")
                        .HasColumnType("integer");

                    b.Property<int?>("AASXId")
                        .HasColumnType("integer");

                    b.Property<int?>("AASXSetId")
                        .HasColumnType("integer");

                    b.Property<string>("IdShort")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.Property<string>("SemanticId")
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeStampCreate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TimeStampTree")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AASId");

                    b.HasIndex("AASXSetId");

                    b.HasIndex("ParentId");

                    b.ToTable("SMSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SValueSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Annotation")
                        .HasColumnType("text");

                    b.Property<int>("SMEId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SMEId");

                    b.ToTable("SValueSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.AASSet", b =>
                {
                    b.HasOne("AasxServerDB.Entities.AASXSet", "AASXSet")
                        .WithMany("AASSets")
                        .HasForeignKey("AASXSetId");

                    b.HasOne("AasxServerDB.Entities.AASSet", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.OwnsOne("AasxServerDB.Entities.JAssetAdministrationShell", "AssetAdministrationShell", b1 =>
                        {
                            b1.Property<int>("AASSetId")
                                .HasColumnType("integer");

                            b1.Property<string>("Category")
                                .HasColumnType("text");

                            b1.Property<string>("Id")
                                .HasColumnType("text");

                            b1.Property<string>("IdShort")
                                .HasColumnType("text");

                            b1.Property<string>("ParentId")
                                .HasColumnType("text");

                            b1.Property<DateTime>("TimeStamp")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("TimeStampCreate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("TimeStampTree")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("AASSetId");

                            b1.ToTable("AASSets");

                            b1.ToJson("AssetAdministrationShell");

                            b1.WithOwner()
                                .HasForeignKey("AASSetId");

                            b1.OwnsOne("AasxServerDB.Entities.JAdministrativeInformation", "Administration", b2 =>
                                {
                                    b2.Property<int>("JAssetAdministrationShellAASSetId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Revision")
                                        .HasColumnType("text");

                                    b2.Property<string>("TemplateId")
                                        .HasColumnType("text");

                                    b2.Property<string>("Version")
                                        .HasColumnType("text");

                                    b2.HasKey("JAssetAdministrationShellAASSetId");

                                    b2.ToTable("AASSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JAssetAdministrationShellAASSetId");
                                });

                            b1.OwnsOne("AasxServerDB.Entities.JReference", "DerivedFrom", b2 =>
                                {
                                    b2.Property<int>("JAssetAdministrationShellAASSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Type")
                                        .HasColumnType("integer");

                                    b2.HasKey("JAssetAdministrationShellAASSetId");

                                    b2.ToTable("AASSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JAssetAdministrationShellAASSetId");

                                    b2.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b3 =>
                                        {
                                            b3.Property<int>("JReferenceJAssetAdministrationShellAASSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .HasColumnType("text");

                                            b3.HasKey("JReferenceJAssetAdministrationShellAASSetId", "Id");

                                            b3.ToTable("AASSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JReferenceJAssetAdministrationShellAASSetId");
                                        });

                                    b2.Navigation("Keys");
                                });

                            b1.OwnsMany("AasxServerDB.Entities.JAbstractLangString", "Description", b2 =>
                                {
                                    b2.Property<int>("JAssetAdministrationShellAASSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Language")
                                        .HasColumnType("text");

                                    b2.Property<string>("Text")
                                        .HasColumnType("text");

                                    b2.HasKey("JAssetAdministrationShellAASSetId", "Id");

                                    b2.ToTable("AASSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JAssetAdministrationShellAASSetId");
                                });

                            b1.OwnsMany("AasxServerDB.Entities.JAbstractLangString", "DisplayName", b2 =>
                                {
                                    b2.Property<int>("JAssetAdministrationShellAASSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Language")
                                        .HasColumnType("text");

                                    b2.Property<string>("Text")
                                        .HasColumnType("text");

                                    b2.HasKey("JAssetAdministrationShellAASSetId", "Id");

                                    b2.ToTable("AASSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JAssetAdministrationShellAASSetId");
                                });

                            b1.OwnsMany("AasxServerDB.Entities.JEmbeddedDataSpecification", "EmbeddedDataSpecifications", b2 =>
                                {
                                    b2.Property<int>("JAssetAdministrationShellAASSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("DataSpecificationContent")
                                        .HasColumnType("text");

                                    b2.HasKey("JAssetAdministrationShellAASSetId", "Id");

                                    b2.ToTable("AASSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JAssetAdministrationShellAASSetId");

                                    b2.OwnsOne("AasxServerDB.Entities.JReference", "DataSpecification", b3 =>
                                        {
                                            b3.Property<int>("JEmbeddedDataSpecificationJAssetAdministrationShellAASSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JEmbeddedDataSpecificationId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JEmbeddedDataSpecificationJAssetAdministrationShellAASSetId", "JEmbeddedDataSpecificationId");

                                            b3.ToTable("AASSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JEmbeddedDataSpecificationJAssetAdministrationShellAASSetId", "JEmbeddedDataSpecificationId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJEmbeddedDataSpecificationJAssetAdministrationShellAASSetId")
                                                        .HasColumnType("integer")
                                                        .HasColumnName("JReferenceJEmbeddedDataSpecificationJAssetAdministrationShellA~");

                                                    b4.Property<int>("JReferenceJEmbeddedDataSpecificationId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJEmbeddedDataSpecificationJAssetAdministrationShellAASSetId", "JReferenceJEmbeddedDataSpecificationId", "Id");

                                                    b4.ToTable("AASSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJEmbeddedDataSpecificationJAssetAdministrationShellAASSetId", "JReferenceJEmbeddedDataSpecificationId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.Navigation("DataSpecification");
                                });

                            b1.OwnsMany("AasxServerDB.Entities.JExtension", "Extensions", b2 =>
                                {
                                    b2.Property<int>("JAssetAdministrationShellAASSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value")
                                        .HasColumnType("text");

                                    b2.Property<int?>("ValueType")
                                        .HasColumnType("integer");

                                    b2.HasKey("JAssetAdministrationShellAASSetId", "Id");

                                    b2.ToTable("AASSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JAssetAdministrationShellAASSetId");

                                    b2.OwnsMany("AasxServerDB.Entities.JReference", "RefersTo", b3 =>
                                        {
                                            b3.Property<int>("JExtensionJAssetAdministrationShellAASSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JExtensionId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JExtensionJAssetAdministrationShellAASSetId", "JExtensionId", "Id");

                                            b3.ToTable("AASSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JExtensionJAssetAdministrationShellAASSetId", "JExtensionId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJExtensionJAssetAdministrationShellAASSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJExtensionId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJExtensionJAssetAdministrationShellAASSetId", "JReferenceJExtensionId", "JReferenceId", "Id");

                                                    b4.ToTable("AASSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJExtensionJAssetAdministrationShellAASSetId", "JReferenceJExtensionId", "JReferenceId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.OwnsOne("AasxServerDB.Entities.JReference", "SemanticId", b3 =>
                                        {
                                            b3.Property<int>("JExtensionJAssetAdministrationShellAASSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JExtensionId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JExtensionJAssetAdministrationShellAASSetId", "JExtensionId");

                                            b3.ToTable("AASSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JExtensionJAssetAdministrationShellAASSetId", "JExtensionId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJExtensionJAssetAdministrationShellAASSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJExtensionId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJExtensionJAssetAdministrationShellAASSetId", "JReferenceJExtensionId", "Id");

                                                    b4.ToTable("AASSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJExtensionJAssetAdministrationShellAASSetId", "JReferenceJExtensionId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.OwnsMany("AasxServerDB.Entities.JReference", "SupplementalSemanticIds", b3 =>
                                        {
                                            b3.Property<int>("JExtensionJAssetAdministrationShellAASSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JExtensionId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JExtensionJAssetAdministrationShellAASSetId", "JExtensionId", "Id");

                                            b3.ToTable("AASSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JExtensionJAssetAdministrationShellAASSetId", "JExtensionId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJExtensionJAssetAdministrationShellAASSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJExtensionId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJExtensionJAssetAdministrationShellAASSetId", "JReferenceJExtensionId", "JReferenceId", "Id");

                                                    b4.ToTable("AASSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJExtensionJAssetAdministrationShellAASSetId", "JReferenceJExtensionId", "JReferenceId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.Navigation("RefersTo");

                                    b2.Navigation("SemanticId");

                                    b2.Navigation("SupplementalSemanticIds");
                                });

                            b1.OwnsOne("AasxServerDB.Entities.JAssetInformation", "AssetInformation", b2 =>
                                {
                                    b2.Property<int>("JAssetAdministrationShellAASSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("AssetKind")
                                        .HasColumnType("integer");

                                    b2.Property<string>("AssetType")
                                        .HasColumnType("text");

                                    b2.Property<string>("GlobalAssetId")
                                        .HasColumnType("text");

                                    b2.HasKey("JAssetAdministrationShellAASSetId");

                                    b2.ToTable("AASSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JAssetAdministrationShellAASSetId");

                                    b2.OwnsOne("AasxServerDB.Entities.JResource", "DefaultThumbnail", b3 =>
                                        {
                                            b3.Property<int>("JAssetInformationJAssetAdministrationShellAASSetId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("ContentType")
                                                .HasColumnType("text");

                                            b3.Property<string>("Path")
                                                .HasColumnType("text");

                                            b3.HasKey("JAssetInformationJAssetAdministrationShellAASSetId");

                                            b3.ToTable("AASSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JAssetInformationJAssetAdministrationShellAASSetId");
                                        });

                                    b2.OwnsMany("AasxServerDB.Entities.JSpecificAssetId", "SpecificAssetIds", b3 =>
                                        {
                                            b3.Property<int>("JAssetInformationJAssetAdministrationShellAASSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            b3.Property<string>("Name")
                                                .HasColumnType("text");

                                            b3.Property<string>("Value")
                                                .HasColumnType("text");

                                            b3.HasKey("JAssetInformationJAssetAdministrationShellAASSetId", "Id");

                                            b3.ToTable("AASSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JAssetInformationJAssetAdministrationShellAASSetId");

                                            b3.OwnsOne("AasxServerDB.Entities.JReference", "ExternalSubjectId", b4 =>
                                                {
                                                    b4.Property<int>("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId")
                                                        .HasColumnType("integer")
                                                        .HasColumnName("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASS~");

                                                    b4.Property<int>("JSpecificAssetIdId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.HasKey("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JSpecificAssetIdId");

                                                    b4.ToTable("AASSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JSpecificAssetIdId");

                                                    b4.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b5 =>
                                                        {
                                                            b5.Property<int>("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId")
                                                                .HasColumnType("integer")
                                                                .HasColumnName("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministratio~");

                                                            b5.Property<int>("JReferenceJSpecificAssetIdId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("Id")
                                                                .ValueGeneratedOnAdd()
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("Type")
                                                                .HasColumnType("integer");

                                                            b5.Property<string>("Value")
                                                                .HasColumnType("text");

                                                            b5.HasKey("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JReferenceJSpecificAssetIdId", "Id");

                                                            b5.ToTable("AASSets");

                                                            b5.WithOwner()
                                                                .HasForeignKey("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JReferenceJSpecificAssetIdId");
                                                        });

                                                    b4.Navigation("Keys");
                                                });

                                            b3.OwnsOne("AasxServerDB.Entities.JReference", "SemanticId", b4 =>
                                                {
                                                    b4.Property<int>("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId")
                                                        .HasColumnType("integer")
                                                        .HasColumnName("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASS~");

                                                    b4.Property<int>("JSpecificAssetIdId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.HasKey("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JSpecificAssetIdId");

                                                    b4.ToTable("AASSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JSpecificAssetIdId");

                                                    b4.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b5 =>
                                                        {
                                                            b5.Property<int>("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId")
                                                                .HasColumnType("integer")
                                                                .HasColumnName("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministratio~");

                                                            b5.Property<int>("JReferenceJSpecificAssetIdId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("Id")
                                                                .ValueGeneratedOnAdd()
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("Type")
                                                                .HasColumnType("integer");

                                                            b5.Property<string>("Value")
                                                                .HasColumnType("text");

                                                            b5.HasKey("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JReferenceJSpecificAssetIdId", "Id");

                                                            b5.ToTable("AASSets");

                                                            b5.WithOwner()
                                                                .HasForeignKey("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JReferenceJSpecificAssetIdId");
                                                        });

                                                    b4.Navigation("Keys");
                                                });

                                            b3.OwnsMany("AasxServerDB.Entities.JReference", "SupplementalSemanticIds", b4 =>
                                                {
                                                    b4.Property<int>("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId")
                                                        .HasColumnType("integer")
                                                        .HasColumnName("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASS~");

                                                    b4.Property<int>("JSpecificAssetIdId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.HasKey("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JSpecificAssetIdId", "Id");

                                                    b4.ToTable("AASSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JSpecificAssetIdId");

                                                    b4.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b5 =>
                                                        {
                                                            b5.Property<int>("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId")
                                                                .HasColumnType("integer")
                                                                .HasColumnName("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministratio~");

                                                            b5.Property<int>("JReferenceJSpecificAssetIdId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("JReferenceId")
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("Id")
                                                                .ValueGeneratedOnAdd()
                                                                .HasColumnType("integer");

                                                            b5.Property<int>("Type")
                                                                .HasColumnType("integer");

                                                            b5.Property<string>("Value")
                                                                .HasColumnType("text");

                                                            b5.HasKey("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JReferenceJSpecificAssetIdId", "JReferenceId", "Id");

                                                            b5.ToTable("AASSets");

                                                            b5.WithOwner()
                                                                .HasForeignKey("JReferenceJSpecificAssetIdJAssetInformationJAssetAdministrationShellAASSetId", "JReferenceJSpecificAssetIdId", "JReferenceId");
                                                        });

                                                    b4.Navigation("Keys");
                                                });

                                            b3.Navigation("ExternalSubjectId");

                                            b3.Navigation("SemanticId");

                                            b3.Navigation("SupplementalSemanticIds");
                                        });

                                    b2.Navigation("DefaultThumbnail");

                                    b2.Navigation("SpecificAssetIds");
                                });

                            b1.Navigation("Administration");

                            b1.Navigation("AssetInformation");

                            b1.Navigation("DerivedFrom");

                            b1.Navigation("Description");

                            b1.Navigation("DisplayName");

                            b1.Navigation("EmbeddedDataSpecifications");

                            b1.Navigation("Extensions");
                        });

                    b.Navigation("AASXSet");

                    b.Navigation("AssetAdministrationShell");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AasxServerDB.Entities.DValueSet", b =>
                {
                    b.HasOne("AasxServerDB.Entities.SMESet", "SMESet")
                        .WithMany("DValueSets")
                        .HasForeignKey("SMEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SMESet");
                });

            modelBuilder.Entity("AasxServerDB.Entities.IValueSet", b =>
                {
                    b.HasOne("AasxServerDB.Entities.SMESet", "SMESet")
                        .WithMany("IValueSets")
                        .HasForeignKey("SMEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SMESet");
                });

            modelBuilder.Entity("AasxServerDB.Entities.OValueSet", b =>
                {
                    b.HasOne("AasxServerDB.Entities.SMESet", "SMESet")
                        .WithMany("OValueSets")
                        .HasForeignKey("SMEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SMESet");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SMESet", b =>
                {
                    b.HasOne("AasxServerDB.Entities.SMESet", "ParentSME")
                        .WithMany()
                        .HasForeignKey("ParentSMEId");

                    b.HasOne("AasxServerDB.Entities.SMSet", "SMSet")
                        .WithMany("SMESets")
                        .HasForeignKey("SMId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentSME");

                    b.Navigation("SMSet");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SMESnapshot", b =>
                {
                    b.HasOne("AasxServerDB.Entities.AASSet", "AASSet")
                        .WithMany()
                        .HasForeignKey("AASId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AasxServerDB.Entities.SMESet", "SMESet")
                        .WithMany()
                        .HasForeignKey("SMEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AASSet");

                    b.Navigation("SMESet");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SMSet", b =>
                {
                    b.HasOne("AasxServerDB.Entities.AASSet", "AASSet")
                        .WithMany("SMSets")
                        .HasForeignKey("AASId");

                    b.HasOne("AasxServerDB.Entities.AASXSet", "AASXSet")
                        .WithMany("SMSets")
                        .HasForeignKey("AASXSetId");

                    b.HasOne("AasxServerDB.Entities.SMSet", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.OwnsOne("AasxServerDB.Entities.JSubmodel", "Submodel", b1 =>
                        {
                            b1.Property<int>("SMSetId")
                                .HasColumnType("integer");

                            b1.Property<string>("Category")
                                .HasColumnType("text");

                            b1.Property<string>("Id")
                                .HasColumnType("text");

                            b1.Property<string>("IdShort")
                                .HasColumnType("text");

                            b1.Property<int?>("Kind")
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.Property<string>("Parent")
                                .HasColumnType("text");

                            b1.Property<DateTime>("TimeStamp")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("TimeStampCreate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime>("TimeStampTree")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("SMSetId");

                            b1.ToTable("SMSets");

                            b1.ToJson("Submodel");

                            b1.WithOwner()
                                .HasForeignKey("SMSetId");

                            b1.OwnsMany("AasxServerDB.Entities.JQualifier", "Qualifiers", b2 =>
                                {
                                    b2.Property<int>("JSubmodelSMSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<int?>("Kind")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Type")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value")
                                        .HasColumnType("text");

                                    b2.Property<int>("ValueType")
                                        .HasColumnType("integer");

                                    b2.HasKey("JSubmodelSMSetId", "Id");

                                    b2.ToTable("SMSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JSubmodelSMSetId");

                                    b2.OwnsOne("AasxServerDB.Entities.JReference", "SemanticId", b3 =>
                                        {
                                            b3.Property<int>("JQualifierJSubmodelSMSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JQualifierId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JQualifierJSubmodelSMSetId", "JQualifierId");

                                            b3.ToTable("SMSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JQualifierJSubmodelSMSetId", "JQualifierId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJQualifierJSubmodelSMSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJQualifierId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJQualifierJSubmodelSMSetId", "JReferenceJQualifierId", "Id");

                                                    b4.ToTable("SMSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJQualifierJSubmodelSMSetId", "JReferenceJQualifierId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.OwnsMany("AasxServerDB.Entities.JReference", "SupplementalSemanticIds", b3 =>
                                        {
                                            b3.Property<int>("JQualifierJSubmodelSMSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JQualifierId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JQualifierJSubmodelSMSetId", "JQualifierId", "Id");

                                            b3.ToTable("SMSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JQualifierJSubmodelSMSetId", "JQualifierId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJQualifierJSubmodelSMSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJQualifierId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJQualifierJSubmodelSMSetId", "JReferenceJQualifierId", "JReferenceId", "Id");

                                                    b4.ToTable("SMSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJQualifierJSubmodelSMSetId", "JReferenceJQualifierId", "JReferenceId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.OwnsOne("AasxServerDB.Entities.JReference", "ValueId", b3 =>
                                        {
                                            b3.Property<int>("JQualifierJSubmodelSMSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JQualifierId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JQualifierJSubmodelSMSetId", "JQualifierId");

                                            b3.ToTable("SMSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JQualifierJSubmodelSMSetId", "JQualifierId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJQualifierJSubmodelSMSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJQualifierId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJQualifierJSubmodelSMSetId", "JReferenceJQualifierId", "Id");

                                                    b4.ToTable("SMSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJQualifierJSubmodelSMSetId", "JReferenceJQualifierId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.Navigation("SemanticId");

                                    b2.Navigation("SupplementalSemanticIds");

                                    b2.Navigation("ValueId");
                                });

                            b1.OwnsMany("AasxServerDB.Entities.JAbstractLangString", "Description", b2 =>
                                {
                                    b2.Property<int>("JSubmodelSMSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Language")
                                        .HasColumnType("text");

                                    b2.Property<string>("Text")
                                        .HasColumnType("text");

                                    b2.HasKey("JSubmodelSMSetId", "Id");

                                    b2.ToTable("SMSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JSubmodelSMSetId");
                                });

                            b1.OwnsMany("AasxServerDB.Entities.JAbstractLangString", "DisplayName", b2 =>
                                {
                                    b2.Property<int>("JSubmodelSMSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Language")
                                        .HasColumnType("text");

                                    b2.Property<string>("Text")
                                        .HasColumnType("text");

                                    b2.HasKey("JSubmodelSMSetId", "Id");

                                    b2.ToTable("SMSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JSubmodelSMSetId");
                                });

                            b1.OwnsMany("AasxServerDB.Entities.JEmbeddedDataSpecification", "EmbeddedDataSpecifications", b2 =>
                                {
                                    b2.Property<int>("JSubmodelSMSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("DataSpecificationContent")
                                        .HasColumnType("text");

                                    b2.HasKey("JSubmodelSMSetId", "Id");

                                    b2.ToTable("SMSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JSubmodelSMSetId");

                                    b2.OwnsOne("AasxServerDB.Entities.JReference", "DataSpecification", b3 =>
                                        {
                                            b3.Property<int>("JEmbeddedDataSpecificationJSubmodelSMSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JEmbeddedDataSpecificationId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JEmbeddedDataSpecificationJSubmodelSMSetId", "JEmbeddedDataSpecificationId");

                                            b3.ToTable("SMSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JEmbeddedDataSpecificationJSubmodelSMSetId", "JEmbeddedDataSpecificationId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJEmbeddedDataSpecificationJSubmodelSMSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJEmbeddedDataSpecificationId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJEmbeddedDataSpecificationJSubmodelSMSetId", "JReferenceJEmbeddedDataSpecificationId", "Id");

                                                    b4.ToTable("SMSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJEmbeddedDataSpecificationJSubmodelSMSetId", "JReferenceJEmbeddedDataSpecificationId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.Navigation("DataSpecification");
                                });

                            b1.OwnsMany("AasxServerDB.Entities.JExtension", "Extensions", b2 =>
                                {
                                    b2.Property<int>("JSubmodelSMSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Name")
                                        .HasColumnType("text");

                                    b2.Property<string>("Value")
                                        .HasColumnType("text");

                                    b2.Property<int?>("ValueType")
                                        .HasColumnType("integer");

                                    b2.HasKey("JSubmodelSMSetId", "Id");

                                    b2.ToTable("SMSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JSubmodelSMSetId");

                                    b2.OwnsMany("AasxServerDB.Entities.JReference", "RefersTo", b3 =>
                                        {
                                            b3.Property<int>("JExtensionJSubmodelSMSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JExtensionId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JExtensionJSubmodelSMSetId", "JExtensionId", "Id");

                                            b3.ToTable("SMSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JExtensionJSubmodelSMSetId", "JExtensionId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJExtensionJSubmodelSMSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJExtensionId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJExtensionJSubmodelSMSetId", "JReferenceJExtensionId", "JReferenceId", "Id");

                                                    b4.ToTable("SMSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJExtensionJSubmodelSMSetId", "JReferenceJExtensionId", "JReferenceId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.OwnsOne("AasxServerDB.Entities.JReference", "SemanticId", b3 =>
                                        {
                                            b3.Property<int>("JExtensionJSubmodelSMSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JExtensionId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JExtensionJSubmodelSMSetId", "JExtensionId");

                                            b3.ToTable("SMSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JExtensionJSubmodelSMSetId", "JExtensionId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJExtensionJSubmodelSMSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJExtensionId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJExtensionJSubmodelSMSetId", "JReferenceJExtensionId", "Id");

                                                    b4.ToTable("SMSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJExtensionJSubmodelSMSetId", "JReferenceJExtensionId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.OwnsMany("AasxServerDB.Entities.JReference", "SupplementalSemanticIds", b3 =>
                                        {
                                            b3.Property<int>("JExtensionJSubmodelSMSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JExtensionId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.HasKey("JExtensionJSubmodelSMSetId", "JExtensionId", "Id");

                                            b3.ToTable("SMSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JExtensionJSubmodelSMSetId", "JExtensionId");

                                            b3.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b4 =>
                                                {
                                                    b4.Property<int>("JReferenceJExtensionJSubmodelSMSetId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceJExtensionId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("JReferenceId")
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Id")
                                                        .ValueGeneratedOnAdd()
                                                        .HasColumnType("integer");

                                                    b4.Property<int>("Type")
                                                        .HasColumnType("integer");

                                                    b4.Property<string>("Value")
                                                        .HasColumnType("text");

                                                    b4.HasKey("JReferenceJExtensionJSubmodelSMSetId", "JReferenceJExtensionId", "JReferenceId", "Id");

                                                    b4.ToTable("SMSets");

                                                    b4.WithOwner()
                                                        .HasForeignKey("JReferenceJExtensionJSubmodelSMSetId", "JReferenceJExtensionId", "JReferenceId");
                                                });

                                            b3.Navigation("Keys");
                                        });

                                    b2.Navigation("RefersTo");

                                    b2.Navigation("SemanticId");

                                    b2.Navigation("SupplementalSemanticIds");
                                });

                            b1.OwnsOne("AasxServerDB.Entities.JReference", "SemanticId", b2 =>
                                {
                                    b2.Property<int>("JSubmodelSMSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Type")
                                        .HasColumnType("integer");

                                    b2.HasKey("JSubmodelSMSetId");

                                    b2.ToTable("SMSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JSubmodelSMSetId");

                                    b2.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b3 =>
                                        {
                                            b3.Property<int>("JReferenceJSubmodelSMSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .HasColumnType("text");

                                            b3.HasKey("JReferenceJSubmodelSMSetId", "Id");

                                            b3.ToTable("SMSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JReferenceJSubmodelSMSetId");
                                        });

                                    b2.Navigation("Keys");
                                });

                            b1.OwnsMany("AasxServerDB.Entities.JReference", "SupplementalSemanticIds", b2 =>
                                {
                                    b2.Property<int>("JSubmodelSMSetId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<int>("Type")
                                        .HasColumnType("integer");

                                    b2.HasKey("JSubmodelSMSetId", "Id");

                                    b2.ToTable("SMSets");

                                    b2.WithOwner()
                                        .HasForeignKey("JSubmodelSMSetId");

                                    b2.OwnsMany("AasxServerDB.Entities.JKey", "Keys", b3 =>
                                        {
                                            b3.Property<int>("JReferenceJSubmodelSMSetId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("JReferenceId")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("integer");

                                            b3.Property<int>("Type")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .HasColumnType("text");

                                            b3.HasKey("JReferenceJSubmodelSMSetId", "JReferenceId", "Id");

                                            b3.ToTable("SMSets");

                                            b3.WithOwner()
                                                .HasForeignKey("JReferenceJSubmodelSMSetId", "JReferenceId");
                                        });

                                    b2.Navigation("Keys");
                                });

                            b1.Navigation("Description");

                            b1.Navigation("DisplayName");

                            b1.Navigation("EmbeddedDataSpecifications");

                            b1.Navigation("Extensions");

                            b1.Navigation("Qualifiers");

                            b1.Navigation("SemanticId");

                            b1.Navigation("SupplementalSemanticIds");
                        });

                    b.Navigation("AASSet");

                    b.Navigation("AASXSet");

                    b.Navigation("Parent");

                    b.Navigation("Submodel");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SValueSet", b =>
                {
                    b.HasOne("AasxServerDB.Entities.SMESet", "SMESet")
                        .WithMany("SValueSets")
                        .HasForeignKey("SMEId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SMESet");
                });

            modelBuilder.Entity("AasxServerDB.Entities.AASSet", b =>
                {
                    b.Navigation("SMSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.AASXSet", b =>
                {
                    b.Navigation("AASSets");

                    b.Navigation("SMSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SMESet", b =>
                {
                    b.Navigation("DValueSets");

                    b.Navigation("IValueSets");

                    b.Navigation("OValueSets");

                    b.Navigation("SValueSets");
                });

            modelBuilder.Entity("AasxServerDB.Entities.SMSet", b =>
                {
                    b.Navigation("SMESets");
                });
#pragma warning restore 612, 618
        }
    }
}
